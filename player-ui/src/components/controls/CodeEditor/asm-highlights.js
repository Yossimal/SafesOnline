export const asm_syntex = {
	'comment': /;.*$/m,
	'string': /(["'`])(?:\\.|(?!\1)[^\\\r\n])*\1/,
	'label': {
		pattern: /(^\s*)[A-Za-z._?$][\w.?$@~#]*:/m,
		lookbehind: true,
		alias: 'function'
	},
	'keyword':{
			pattern:/(AAA[ \t])|(AAD[ \t])|(AAM[ \t])|(AAS[ \t])|(ADC[ \t])|(ADD[ \t])|(AND[ \t])|(ARPL[ \t])|(BOUND[ \t])|(BSF[ \t])|(BSR[ \t])|(BSWAP[ \t])|(BT[ \t])|(BTC[ \t])|(BTR[ \t])|(BTS[ \t])|(CALL[ \t])|(CBW[ \t])|(CDQ[ \t])|(CLC[ \t])|(CLD[ \t])|(CLI[ \t])|(CLTS[ \t])|(CMC[ \t])|(CMP[ \t])|(CMPS[ \t])|(CMPXCHG[ \t])|(CWD[ \t])|(CWDE[ \t])|(DAA[ \t])|(DAS[ \t])|(DEC[ \t])|(DIV[ \t])|(ENTER[ \t])|(ESC[ \t])|(HLT[ \t])|(IDIV[ \t])|(IMUL[ \t])|(IN[ \t])|(INC[ \t])|(INS[ \t])|(INT[ \t])|(INTO[ \t])|(INVD[ \t])|(INVLPG[ \t])|(IRET[ \t])|(IRETD[ \t])|(Jxx[ \t])|(JCXZ[ \t])|(JECXZ[ \t])|(JMP[ \t])|(LAHF[ \t])|(LAR[ \t])|(LDS[ \t])|(LEA[ \t])|(LEAVE[ \t])|(LES[ \t])|(LFS[ \t])|(LGDT[ \t])|(LIDT[ \t])|(LGS[ \t])|(LLDT[ \t])|(LMSW[ \t])|(LOCK[ \t])|(LODS[ \t])|(LOOP[ \t])|(LOOPE[ \t])|(LOOPZ[ \t])|(LOOPNZ[ \t])|(LOOPNE[ \t])|(LSL[ \t])|(LSS[ \t])|(LTR[ \t])|(MOV[ \t])|(MOVS[ \t])|(MOVSX[ \t])|(MOVZX[ \t])|(MUL[ \t])|(NEG[ \t])|(NOP[ \t])|(NOT[ \t])|(OR[ \t])|(OUT[ \t])|(OUTS[ \t])|(POP[ \t])|(POPA[ \t])|(POPAD[ \t])|(POPF[ \t])|(POPFD[ \t])|(PUSH[ \t])|(PUSHA[ \t])|(PUSHAD[ \t])|(PUSHF[ \t])|(PUSHFD[ \t])|(RCL[ \t])|(RCR[ \t])|(REP[ \t])|(REPE[ \t])|(REPZ[ \t])|(REPNE[ \t])|(REPNZ[ \t])|(RET[ \t])|(RETF[ \t])|(ROL[ \t])|(ROR[ \t])|(SAHF[ \t])|(SAL[ \t])|(SHL[ \t])|(SAR[ \t])|(SBB[ \t])|(SCAS[ \t])|(SETAE[ \t])|(SETNB[ \t])|(SETB[ \t])|(SETNAE[ \t])|(SETBE[ \t])|(SETNA[ \t])|(SETE[ \t])|(SETZ[ \t])|(SETNE[ \t])|(SETNZ[ \t])|(SETL[ \t])|(SETNGE[ \t])|(SETGE[ \t])|(SETNL[ \t])|(SETLE[ \t])|(SETNG[ \t])|(SETG[ \t])|(SETNLE[ \t])|(SETS[ \t])|(SETNS[ \t])|(SETC[ \t])|(SETNC[ \t])|(SETO[ \t])|(SETNO[ \t])|(SETP[ \t])|(SETPE[ \t])|(SETNP[ \t])|(SETPO[ \t])|(SGDT[ \t])|(SIDT[ \t])|(SHL[ \t])|(SHR[ \t])|(SHLD[ \t])|(SHRD[ \t])|(SLDT[ \t])|(SMSW[ \t])|(STC[ \t])|(STD[ \t])|(STI[ \t])|(STOS[ \t])|(STR[ \t])|(SUB[ \t])|(TEST[ \t])|(VERR[ \t])|(VERW[ \t])|(WAIT[ \t])|(FWAIT[ \t])|(WBINVD[ \t])|(XCHG[ \t])|(XLAT[ \t])|(XLATB[ \t])|(XOR[ \t])|(aaa[ \t])|(aad[ \t])|(aam[ \t])|(aas[ \t])|(adc[ \t])|(add[ \t])|(and[ \t])|(arpl[ \t])|(bound[ \t])|(bsf[ \t])|(bsr[ \t])|(bswap[ \t])|(bt[ \t])|(btc[ \t])|(btr[ \t])|(bts[ \t])|(call[ \t])|(cbw[ \t])|(cdq[ \t])|(clc[ \t])|(cld[ \t])|(cli[ \t])|(clts[ \t])|(cmc[ \t])|(cmp[ \t])|(cmps[ \t])|(cmpxchg[ \t])|(cwd[ \t])|(cwde[ \t])|(daa[ \t])|(das[ \t])|(dec[ \t])|(div[ \t])|(enter[ \t])|(esc[ \t])|(hlt[ \t])|(idiv[ \t])|(imul[ \t])|(in[ \t])|(inc[ \t])|(ins[ \t])|(int[ \t])|(into[ \t])|(invd[ \t])|(invlpg[ \t])|(iret[ \t])|(iretd[ \t])|(jxx[ \t])|(jcxz[ \t])|(jecxz[ \t])|(jmp[ \t])|(lahf[ \t])|(lar[ \t])|(lds[ \t])|(lea[ \t])|(leave[ \t])|(les[ \t])|(lfs[ \t])|(lgdt[ \t])|(lidt[ \t])|(lgs[ \t])|(lldt[ \t])|(lmsw[ \t])|(lock[ \t])|(lods[ \t])|(loop[ \t])|(loope[ \t])|(loopz[ \t])|(loopnz[ \t])|(loopne[ \t])|(lsl[ \t])|(lss[ \t])|(ltr[ \t])|(mov[ \t])|(movs[ \t])|(movsx[ \t])|(movzx[ \t])|(mul[ \t])|(neg[ \t])|(nop[ \t])|(not[ \t])|(or[ \t])|(out[ \t])|(outs[ \t])|(pop[ \t])|(popa[ \t])|(popad[ \t])|(popf[ \t])|(popfd[ \t])|(push[ \t])|(pusha[ \t])|(pushad[ \t])|(pushf[ \t])|(pushfd[ \t])|(rcl[ \t])|(rcr[ \t])|(rep[ \t])|(repe[ \t])|(repz[ \t])|(repne[ \t])|(repnz[ \t])|(ret[ \t])|(retf[ \t])|(rol[ \t])|(ror[ \t])|(sahf[ \t])|(sal[ \t])|(shl[ \t])|(sar[ \t])|(sbb[ \t])|(scas[ \t])|(setae[ \t])|(setnb[ \t])|(setb[ \t])|(setnae[ \t])|(setbe[ \t])|(setna[ \t])|(sete[ \t])|(setz[ \t])|(setne[ \t])|(setnz[ \t])|(setl[ \t])|(setnge[ \t])|(setge[ \t])|(setnl[ \t])|(setle[ \t])|(setng[ \t])|(setg[ \t])|(setnle[ \t])|(sets[ \t])|(setns[ \t])|(setc[ \t])|(setnc[ \t])|(seto[ \t])|(setno[ \t])|(setp[ \t])|(setpe[ \t])|(setnp[ \t])|(setpo[ \t])|(sgdt[ \t])|(sidt[ \t])|(shl[ \t])|(shr[ \t])|(shld[ \t])|(shrd[ \t])|(sldt[ \t])|(smsw[ \t])|(stc[ \t])|(std[ \t])|(sti[ \t])|(stos[ \t])|(str[ \t])|(sub[ \t])|(test[ \t])|(verr[ \t])|(verw[ \t])|(wait[ \t])|(fwait[ \t])|(wbinvd[ \t])|(xchg[ \t])|(xlat[ \t])|(xlatb[ \t])|(xor[ \t])/,
			lookbehind:true
		},
	'register': {
		pattern: /\b(?:st\d|[xyz]mm\d\d?|[cdt]r\d|r\d\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\b/i,
		alias: 'variable'
	},
	'number': /(?:\b|(?=\$))(?:0[hx][\da-f]*\.?[\da-f]+(?:p[+-]?\d+)?|\d[\da-f]+[hx]|\$\d[\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\d+|\d*\.?\d+(?:\.?e[+-]?\d+)?[dt]?)\b/i,
	'operator': /[\[\]*+\-\/%<>=&|$!]/
};